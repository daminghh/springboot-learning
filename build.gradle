group 'com.learning'    //项目组织的唯一标识符，在实际开发中对应JAVA的包的结构，就是main目录里java的目录结构
version '1.0-SNAPSHOT'  //项目的版本号，例：1.0-SNAPSHOT 。其中1.0是版本号，SNAPSHOT版本代表不稳定、尚处于开发中的版本。而衍生的有Release版本则代表稳定的版本

// gradle构建的时候执行,buildscript中的声明是gradle脚本自身需要使用的资源 。 可以声明的资源包括依赖项、第三方插件、maven仓库地址等
//而在build.gradle文件中直接声明的依赖项、仓库地址等信息是项目自身需要的资源
buildscript {
    //自定义变量
    //自定义一个Project的属性
    ext.buildTime = '2019'
    //自定义多个属性
    ext {
        springBootVersion = '2.0.4.RELEASE' //spring boot版本
        ALI_REPOSITORY_URL = 'http://maven.aliyun.com/nexus/content/groups/public'  //阿里云maven库下载地址
        REPOSITORY_URL = 'http://172.16.60.188:8081/nexus/content/groups/public'    //公司内网下载地址
    }
    // 仓库地址
    repositories {
        // 先从阿里云maven仓库中去下载，没有再去maven中央仓库
        maven {
            url ALI_REPOSITORY_URL
        }
//        maven {
//            url REPOSITORY_URL
//        }
//        mavenCentral()

    }
    // 构建时所需要的插件或者是其他的依赖
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}

// 所有模块的总仓库地址
//allprojects是对所有project的配置，包括Root Project。
allprojects {
    // 在build.gradle文件中直接声明的依赖项、仓库地址等信息是项目自身需要的资源。
    repositories {
        maven {
            url ALI_REPOSITORY_URL
        }
        maven {
            url REPOSITORY_URL
        }
    }
}

//而subprojects是对所有Child Project的配置。
subprojects {

//    apply plugin: 'java'
//    Java插件约定
//    src/main/java为我们项目源代码存放位置；
//    src/main/resources为资源存放位置；
//    src/test/java为我们单元测试用例存放目录；
//    src/test/resources存放我们单元测试中资源存放位置。
    //插件引入
    apply plugin: 'java'
    apply plugin: 'war'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'

    apply plugin: 'application'
    mainClassName = 'com.web.DemoApplication'
    jar {
        manifest {
            attributes 'Main-Class': 'com.web.DemoApplication'
        }
        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }

    dependencies {
        testCompile('org.springframework.boot:spring-boot-starter-test:2.0.4.RELEASE')
        compile 'org.springframework.boot:spring-boot-starter-web:2.0.4.RELEASE'
        compile 'org.projectlombok:lombok:1.18.8'
//        compile 'org.hibernate:hibernate-validator:5.3.6.Final'
        compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2'//mybatis依赖
        compile 'mysql:mysql-connector-java:5.1.21'//数据库连接依赖
        compile 'org.springframework.boot:spring-boot-starter-mail:2.0.4.RELEASE'//邮件依赖
//        compile "org.springframework.boot:spring-boot-starter-thymeleaf"//thymeleaf依赖
        //添加jsp支持依赖
//        compile 'jstl:jstl:1.2'
//        compile 'org.apache.tomcat.embed:tomcat-embed-jasper'
    }
}

